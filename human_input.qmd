---
abstract: |
    Im zweiten Kapitel knüpfen wir an den Regenbogen an und lernen, wie wir den Computer über unsere Eingabe steuern können.
abstract-title: ""
---

# Eingaben {#sec-input}

## Setup {.unnumbered}

Wir erweitern unser Setup aus @sec-colors und fügen ein Eingabegerät hinzu: Einen einfachen Drehknopf ([Rotary Encoder Bricklet 2.0](https://www.tinkerforge.com/en/doc/Hardware/Bricklets/Rotary_Encoder_V2.html)). Den schraubt ihr neben die LED, wie auf der Abbildung zu sehen ist.

::: callout-tip
## Experiment

- RGB LED Button als Eingabegerät
- Einführung in andere Eingabegeräte
:::

## Das fertige Programm

```{python}
import keyboard
import time
import colorsys
from tinkerforge.ip_connection import IPConnection
from tinkerforge.bricklet_rgb_led_v2 import BrickletRGBLEDV2

ipcon = IPConnection()
ipcon.connect('localhost', 4223) 
led = BrickletRGBLEDV2('ZEP', ipcon)

# Turn button of initially
led.set_rgb_value(0, 0, 0)

# Initialize the hue value
hue = 1

# Set the duration for one rainbow cycle
duration_seconds = 4
duration_seconds_per_step = duration_seconds / 360

# Loop until user presses escape key
while not keyboard.is_pressed('esc'):

    # Calculate RGB from hue
    r, g, b = colorsys.hsv_to_rgb(hue / 360.0, 1.0, 1.0)
    r = int(r * 255)
    g = int(g * 255)
    b = int(b * 255)

    led.set_rgb_value(r, g, b)
    
    # Wait a bit
    time.sleep(duration_seconds_per_step)

    hue = hue + 1
    if hue > 360:
        hue = 1

led.set_rgb_value(0, 0, 0)
```